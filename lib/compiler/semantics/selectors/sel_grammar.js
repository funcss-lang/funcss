// Generated by CoffeeScript 1.9.1
(function() {
  var Combinable, Combinator, Combined, DescendantCombinator, GR, PLACEHOLDER, SL, Selector, SelectorGroup, TypeSelector;

  GR = require("../../syntax/gr_nodes");

  SL = require("./sl_nodes");

  TypeSelector = new GR.Ident(function(x) {
    return new SL.TypeSelector(x.value);
  });

  PLACEHOLDER = {
    parse: function() {
      throw new Error("PLACEHOLDER not replaced");
    }
  };

  Combinable = TypeSelector;

  DescendantCombinator = new GR.Empty(function() {
    return SL.DescendantCombinator;
  });

  Combinator = DescendantCombinator;

  Combined = new GR.Juxtaposition(Combinable, new GR.Optional(new GR.Juxtaposition(Combinator, PLACEHOLDER, function(comb, tail) {
    return [comb, tail];
  })), function(head, comb_tail) {
    var comb, tail;
    if (comb_tail != null) {
      comb = comb_tail[0], tail = comb_tail[1];
      return new comb(head, tail);
    } else {
      return head;
    }
  });

  Combined.b.a.b = Combined;

  Selector = Combined;

  SelectorGroup = new GR.DelimitedByComma(Selector);

  module.exports = SelectorGroup;

}).call(this);
