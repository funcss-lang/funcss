// Generated by CoffeeScript 1.9.2
(function() {
  var CS, Parser, Selectors, Semantics, Stream, TP, Vds;

  Semantics = require("../semantics");

  Selectors = require("./selectors");

  Stream = require("../helpers/stream");

  TP = require("./values/tp_nodes");

  CS = require("./cascade/cs_nodes");

  Parser = require("../syntax/parser");

  Vds = require("./values/vds");

  exports.qualifiedRule = function(qrule, sg) {
    var decl, i, len, ref, results, sel, type;
    sel = Selectors.parse(new Stream(qrule.prelude));
    ref = Parser.parse_list_of_declarations(qrule.value.value);
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      decl = ref[i];
      type = sg.propertyValueTypes[decl.name] || new TP.Full(Vds.parse(new Stream(Parser.parse_list_of_component_values("<ident>"))));
      type.setSg(sg);
      if (!type) {
        throw new Error("Undefined property: " + decl.name);
      }
      results.push(sg.simpleRules.push(new CS.SimpleRule({
        mediaQuery: null,
        selector: sel,
        name: decl.name,
        value: type.parse(new Stream(decl.value)),
        important: decl.important
      })));
    }
    return results;
  };

}).call(this);
