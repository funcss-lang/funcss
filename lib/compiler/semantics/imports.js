// Generated by CoffeeScript 1.9.1
(function() {
  var ER, GR, Imports, Syntax, fs, path;

  ER = require("../errors/er_nodes");

  GR = require("../syntax/gr_nodes");

  path = require("path");

  fs = require("fs");

  Syntax = require("../syntax");

  module.exports = Imports = (function() {
    function Imports(fs1) {
      this.fs = fs1;
    }

    Imports.prototype.consume_at_rule = function(atrule) {
      var f, fileName, ss, str;
      if (atrule.value != null) {
        throw new ER.BlockNotAllowed("@import");
      }
      fileName = new GR.String().parse(atrule.prelude, ';');
      if (/^\./.exec(fileName)) {

      } else {
        if (fs.existsSync((f = path.join(__dirname + "/../../../stdlib", fileName)))) {
          fileName = f;
        } else if (fs.existsSync((f = path.join(__dirname + "/../../../stdlib", fileName + ".fcss")))) {
          fileName = f;
        } else {
          throw new ER.IncludeFileNotFound(fileName);
        }
      }
      str = fs.readFileSync(fileName).toString("utf-8");
      ss = Syntax(str, this.fs.options);
      if (typeof console.debug === "function") {
        console.debug("read file " + fileName);
      }
      if (typeof console.debug === "function") {
        console.debug("contents:\n" + ss.value.length);
      }
      return this.fs.consume_stylesheet(ss);
    };

    return Imports;

  })();

}).call(this);
