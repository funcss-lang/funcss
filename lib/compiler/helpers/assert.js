// Generated by CoffeeScript 1.9.1
(function() {
  exports.present = function(values) {
    var name, value;
    for (name in values) {
      value = values[name];
      if (value == null) {
        throw new Error(name + " must be present");
      }
    }
  };

  exports.hasProp = function(values, property) {
    var name, value;
    for (name in values) {
      value = values[name];
      if (value == null) {
        throw new Error(name + " must be present");
      }
      if (value[property] == null) {
        throw new Error(name + " must have property " + property);
      }
    }
  };

  exports.instanceOf = function(values, clazz) {
    var name, value;
    for (name in values) {
      value = values[name];
      if (value == null) {
        throw new Error(name + " must be present");
      }
      if (!(value instanceof clazz)) {
        throw new Error(name + " must be instance of " + clazz.name);
      }
    }
  };

  exports.notInstanceOf = function(values, clazz) {
    var name, value;
    for (name in values) {
      value = values[name];
      if (value == null) {
        throw new Error(name + " must be present");
      }
      if (value instanceof clazz) {
        throw new Error(name + " must not be instance of " + clazz.name);
      }
    }
  };

  exports.array = function(values, clazz) {
    var name, value;
    for (name in values) {
      value = values[name];
      if (value == null) {
        throw new Error(name + " must be present");
      }
      if (value.length == null) {
        throw new Error(name + " must be an array");
      }
    }
  };

  exports["function"] = function(values, clazz) {
    var name, value;
    for (name in values) {
      value = values[name];
      if (value == null) {
        throw new Error(name + " must be present");
      }
      if (!((value.bind != null) && (value.apply != null) && (value.call != null))) {
        throw new Error(name + " must be a function");
      }
    }
  };

}).call(this);
