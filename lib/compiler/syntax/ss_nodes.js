// Generated by CoffeeScript 1.9.1
(function() {
  var SS,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  SS = exports;

  SS.Token = (function() {
    function Token() {}

    return Token;

  })();

  SS.IdentToken = (function(superClass) {
    extend(IdentToken, superClass);

    function IdentToken(value) {
      this.value = value;
    }

    IdentToken.prototype.toString = function() {
      return this.value;
    };

    return IdentToken;

  })(SS.Token);

  SS.FunctionToken = (function(superClass) {
    extend(FunctionToken, superClass);

    function FunctionToken(value) {
      this.value = value;
    }

    FunctionToken.prototype.toString = function() {
      return this.value + "(";
    };

    return FunctionToken;

  })(SS.Token);

  SS.AtKeywordToken = (function(superClass) {
    extend(AtKeywordToken, superClass);

    function AtKeywordToken(value) {
      this.value = value;
    }

    AtKeywordToken.prototype.toString = function() {
      return "@" + this.value;
    };

    return AtKeywordToken;

  })(SS.Token);

  SS.HashToken = (function(superClass) {
    extend(HashToken, superClass);

    function HashToken(value, type) {
      this.value = value;
      this.type = type != null ? type : "unrestricted";
    }

    HashToken.prototype.toString = function() {
      return "#" + this.value;
    };

    return HashToken;

  })(SS.Token);

  SS.StringToken = (function(superClass) {
    extend(StringToken, superClass);

    function StringToken(value) {
      this.value = value;
    }

    StringToken.prototype.toString = function() {
      return JSON.stringify(this.value);
    };

    return StringToken;

  })(SS.Token);

  SS.BadStringToken = (function(superClass) {
    extend(BadStringToken, superClass);

    function BadStringToken() {
      return BadStringToken.__super__.constructor.apply(this, arguments);
    }

    return BadStringToken;

  })(SS.Token);

  SS.UrlToken = (function() {
    function UrlToken(value) {
      this.value = value;
    }

    UrlToken.prototype.toString = function() {
      return "url(" + JSON.stringify(this.value) + ")";
    };

    return UrlToken;

  })();

  SS.BadUrlToken = (function(superClass) {
    extend(BadUrlToken, superClass);

    function BadUrlToken() {
      return BadUrlToken.__super__.constructor.apply(this, arguments);
    }

    return BadUrlToken;

  })(SS.Token);

  SS.DelimToken = (function(superClass) {
    extend(DelimToken, superClass);

    function DelimToken(value) {
      this.value = value;
    }

    DelimToken.prototype.toString = function() {
      return this.value;
    };

    return DelimToken;

  })(SS.Token);

  SS.NumberToken = (function(superClass) {
    extend(NumberToken, superClass);

    function NumberToken(repr, value, type) {
      this.repr = repr;
      this.value = value;
      this.type = type != null ? type : "integer";
    }

    NumberToken.prototype.toString = function() {
      return this.repr;
    };

    return NumberToken;

  })(SS.Token);

  SS.PercentageToken = (function(superClass) {
    extend(PercentageToken, superClass);

    function PercentageToken(repr, value) {
      this.repr = repr;
      this.value = value;
    }

    PercentageToken.prototype.toString = function() {
      return this.repr + "%";
    };

    return PercentageToken;

  })(SS.Token);

  SS.DimensionToken = (function(superClass) {
    extend(DimensionToken, superClass);

    function DimensionToken(repr, value, type, unit) {
      this.repr = repr;
      this.value = value;
      this.type = type != null ? type : "integer";
      this.unit = unit;
    }

    DimensionToken.prototype.toString = function() {
      return this.repr + this.unit;
    };

    return DimensionToken;

  })(SS.Token);

  SS.UnicodeRangeToken = (function(superClass) {
    extend(UnicodeRangeToken, superClass);

    function UnicodeRangeToken(start, end) {
      this.start = start;
      this.end = end;
    }

    return UnicodeRangeToken;

  })(SS.Token);

  SS.SimpleToken = (function(superClass) {
    extend(SimpleToken, superClass);

    function SimpleToken() {
      return SimpleToken.__super__.constructor.apply(this, arguments);
    }

    return SimpleToken;

  })(SS.Token);

  SS.IncludeMatchToken = (function(superClass) {
    extend(IncludeMatchToken, superClass);

    function IncludeMatchToken() {
      return IncludeMatchToken.__super__.constructor.apply(this, arguments);
    }

    IncludeMatchToken.prototype.toString = function() {
      return "~=";
    };

    return IncludeMatchToken;

  })(SS.SimpleToken);

  SS.DashMatchToken = (function(superClass) {
    extend(DashMatchToken, superClass);

    function DashMatchToken() {
      return DashMatchToken.__super__.constructor.apply(this, arguments);
    }

    DashMatchToken.prototype.toString = function() {
      return "|=";
    };

    return DashMatchToken;

  })(SS.SimpleToken);

  SS.PrefixMatchToken = (function(superClass) {
    extend(PrefixMatchToken, superClass);

    function PrefixMatchToken() {
      return PrefixMatchToken.__super__.constructor.apply(this, arguments);
    }

    PrefixMatchToken.prototype.toString = function() {
      return "^=";
    };

    return PrefixMatchToken;

  })(SS.SimpleToken);

  SS.SuffixMatchToken = (function(superClass) {
    extend(SuffixMatchToken, superClass);

    function SuffixMatchToken() {
      return SuffixMatchToken.__super__.constructor.apply(this, arguments);
    }

    SuffixMatchToken.prototype.toString = function() {
      return "$=";
    };

    return SuffixMatchToken;

  })(SS.SimpleToken);

  SS.SubstringMatchToken = (function(superClass) {
    extend(SubstringMatchToken, superClass);

    function SubstringMatchToken() {
      return SubstringMatchToken.__super__.constructor.apply(this, arguments);
    }

    SubstringMatchToken.prototype.toString = function() {
      return "*=";
    };

    return SubstringMatchToken;

  })(SS.SimpleToken);

  SS.ColumnToken = (function(superClass) {
    extend(ColumnToken, superClass);

    function ColumnToken() {
      return ColumnToken.__super__.constructor.apply(this, arguments);
    }

    ColumnToken.prototype.toString = function() {
      return "||";
    };

    return ColumnToken;

  })(SS.SimpleToken);

  SS.WhitespaceToken = (function(superClass) {
    extend(WhitespaceToken, superClass);

    function WhitespaceToken() {
      return WhitespaceToken.__super__.constructor.apply(this, arguments);
    }

    WhitespaceToken.prototype.toString = function() {
      return " ";
    };

    return WhitespaceToken;

  })(SS.SimpleToken);

  SS.CDOToken = (function(superClass) {
    extend(CDOToken, superClass);

    function CDOToken() {
      return CDOToken.__super__.constructor.apply(this, arguments);
    }

    CDOToken.prototype.toString = function() {
      return "<!--";
    };

    return CDOToken;

  })(SS.SimpleToken);

  SS.CDCToken = (function(superClass) {
    extend(CDCToken, superClass);

    function CDCToken() {
      return CDCToken.__super__.constructor.apply(this, arguments);
    }

    CDCToken.prototype.toString = function() {
      return "-->";
    };

    return CDCToken;

  })(SS.SimpleToken);

  SS.ColonToken = (function(superClass) {
    extend(ColonToken, superClass);

    function ColonToken() {
      return ColonToken.__super__.constructor.apply(this, arguments);
    }

    ColonToken.prototype.toString = function() {
      return ":";
    };

    return ColonToken;

  })(SS.SimpleToken);

  SS.SemicolonToken = (function(superClass) {
    extend(SemicolonToken, superClass);

    function SemicolonToken() {
      return SemicolonToken.__super__.constructor.apply(this, arguments);
    }

    SemicolonToken.prototype.toString = function() {
      return ";";
    };

    return SemicolonToken;

  })(SS.SimpleToken);

  SS.CommaToken = (function(superClass) {
    extend(CommaToken, superClass);

    function CommaToken() {
      return CommaToken.__super__.constructor.apply(this, arguments);
    }

    CommaToken.prototype.toString = function() {
      return ",";
    };

    return CommaToken;

  })(SS.SimpleToken);

  SS.OpeningSquareToken = (function(superClass) {
    extend(OpeningSquareToken, superClass);

    function OpeningSquareToken() {
      return OpeningSquareToken.__super__.constructor.apply(this, arguments);
    }

    OpeningSquareToken.prototype.toString = function() {
      return "[";
    };

    OpeningSquareToken.prototype.mirror = function() {
      return SS.ClosingSquareToken;
    };

    return OpeningSquareToken;

  })(SS.SimpleToken);

  SS.ClosingSquareToken = (function(superClass) {
    extend(ClosingSquareToken, superClass);

    function ClosingSquareToken() {
      return ClosingSquareToken.__super__.constructor.apply(this, arguments);
    }

    ClosingSquareToken.prototype.toString = function() {
      return "]";
    };

    return ClosingSquareToken;

  })(SS.SimpleToken);

  SS.OpeningParenToken = (function(superClass) {
    extend(OpeningParenToken, superClass);

    function OpeningParenToken() {
      return OpeningParenToken.__super__.constructor.apply(this, arguments);
    }

    OpeningParenToken.prototype.toString = function() {
      return "(";
    };

    OpeningParenToken.prototype.mirror = function() {
      return SS.ClosingParenToken;
    };

    return OpeningParenToken;

  })(SS.SimpleToken);

  SS.ClosingParenToken = (function(superClass) {
    extend(ClosingParenToken, superClass);

    function ClosingParenToken() {
      return ClosingParenToken.__super__.constructor.apply(this, arguments);
    }

    ClosingParenToken.prototype.toString = function() {
      return ")";
    };

    return ClosingParenToken;

  })(SS.SimpleToken);

  SS.OpeningCurlyToken = (function(superClass) {
    extend(OpeningCurlyToken, superClass);

    function OpeningCurlyToken() {
      return OpeningCurlyToken.__super__.constructor.apply(this, arguments);
    }

    OpeningCurlyToken.prototype.toString = function() {
      return "{";
    };

    OpeningCurlyToken.prototype.mirror = function() {
      return SS.ClosingCurlyToken;
    };

    return OpeningCurlyToken;

  })(SS.SimpleToken);

  SS.ClosingCurlyToken = (function(superClass) {
    extend(ClosingCurlyToken, superClass);

    function ClosingCurlyToken() {
      return ClosingCurlyToken.__super__.constructor.apply(this, arguments);
    }

    ClosingCurlyToken.prototype.toString = function() {
      return "}";
    };

    return ClosingCurlyToken;

  })(SS.SimpleToken);

  SS.EOFToken = (function() {
    function EOFToken(nextToken) {
      this.nextToken = nextToken != null ? nextToken : "";
    }

    EOFToken.prototype.toString = function() {
      return this.nextToken;
    };

    return EOFToken;

  })();

  SS.AtRule = (function() {
    function AtRule(name3, prelude, value) {
      this.name = name3;
      this.prelude = prelude;
      this.value = value != null ? value : void 0;
    }

    AtRule.prototype.toString = function() {
      var ref;
      return "@" + this.name + this.prelude + ((ref = this.value) != null ? ref : ';');
    };

    return AtRule;

  })();

  SS.QualifiedRule = (function() {
    function QualifiedRule(prelude, value) {
      this.prelude = prelude;
      this.value = value != null ? value : void 0;
    }

    QualifiedRule.prototype.toString = function() {
      var ref, ref1;
      return this.prelude + " { " + ((ref = (ref1 = this.value) != null ? ref1.value : void 0) != null ? ref : '') + " }";
    };

    return QualifiedRule;

  })();

  SS.Declaration = (function() {
    function Declaration(name3, value, important) {
      this.name = name3;
      this.value = value;
      this.important = important != null ? important : false;
    }

    return Declaration;

  })();

  SS.Function = (function() {
    function Function(name3, value) {
      this.name = name3;
      this.value = value;
    }

    Function.prototype.toString = function() {
      return this.name + "(" + this.value + ")";
    };

    return Function;

  })();

  SS.SimpleBlock = (function() {
    function SimpleBlock(token, value) {
      this.token = token;
      this.value = value;
    }

    SimpleBlock.prototype.toString = function() {
      return "" + this.token + this.value + (new (this.token.mirror()));
    };

    return SimpleBlock;

  })();

  SS.SyntaxError = (function() {
    function SyntaxError() {}

    return SyntaxError;

  })();

  SS.RuleList = (function() {
    function RuleList() {}

    RuleList.prototype = [];

    return RuleList;

  })();

  SS.DeclarationList = (function() {
    function DeclarationList() {}

    DeclarationList.prototype = [];

    return DeclarationList;

  })();

  SS.ComponentValueList = (function() {
    function ComponentValueList() {}

    ComponentValueList.prototype = [];

    ComponentValueList.commentNeededMap = {
      IdentToken: {
        IdentToken: true,
        FunctionToken: true,
        UrlToken: true,
        BadUrlToken: true,
        '-': true,
        NumberToken: true,
        PercentageToken: true,
        DimensionToken: true,
        UnicodeRangeToken: true,
        CDCToken: true,
        '(': true
      },
      AtKeywordToken: {
        IdentToken: true,
        FunctionToken: true,
        UrlToken: true,
        BadUrlToken: true,
        '-': true,
        NumberToken: true,
        PercentageToken: true,
        DimensionToken: true,
        UnicodeRangeToken: true,
        CDCToken: true
      },
      HashToken: {
        IdentToken: true,
        FunctionToken: true,
        UrlToken: true,
        BadUrlToken: true,
        '-': true,
        NumberToken: true,
        PercentageToken: true,
        DimensionToken: true,
        UnicodeRangeToken: true,
        CDCToken: true
      },
      DimensionToken: {
        IdentToken: true,
        FunctionToken: true,
        UrlToken: true,
        BadUrlToken: true,
        '-': true,
        NumberToken: true,
        PercentageToken: true,
        DimensionToken: true,
        UnicodeRangeToken: true,
        CDCToken: true
      },
      '#': {
        IdentToken: true,
        FunctionToken: true,
        UrlToken: true,
        BadUrlToken: true,
        '-': true,
        NumberToken: true,
        PercentageToken: true,
        DimensionToken: true,
        UnicodeRangeToken: true
      },
      '-': {
        IdentToken: true,
        FunctionToken: true,
        UrlToken: true,
        BadUrlToken: true,
        NumberToken: true,
        PercentageToken: true,
        DimensionToken: true,
        UnicodeRangeToken: true
      },
      NumberToken: {
        IdentToken: true,
        FunctionToken: true,
        UrlToken: true,
        BadUrlToken: true,
        NumberToken: true,
        PercentageToken: true,
        DimensionToken: true,
        UnicodeRangeToken: true
      },
      '@': {
        IdentToken: true,
        FunctionToken: true,
        UrlToken: true,
        BadUrlToken: true,
        '-': true,
        UnicodeRangeToken: true
      },
      UnicodeRangeToken: {
        IdentToken: true,
        FunctionToken: true,
        NumberToken: true,
        PercentageToken: true,
        DimensionToken: true,
        '?': true
      },
      '.': {
        NumberToken: true,
        PercentageToken: true,
        DimensionToken: true
      },
      '+': {
        NumberToken: true,
        PercentageToken: true,
        DimensionToken: true
      },
      '$': {
        '=': true
      },
      '*': {
        '=': true
      },
      '^': {
        '=': true
      },
      '~': {
        '=': true
      },
      '|': {
        '=': true,
        '|': true
      },
      '/': {
        '*': true
      }
    };

    ComponentValueList.commentNeeded = function(node1, node2) {
      var name, name1, name2, node, ref, ref1;
      ref = (function() {
        var j, len, results;
        results = [];
        for (j = 0, len = arguments.length; j < len; j++) {
          node = arguments[j];
          if (node instanceof SS.SimpleBlock) {
            node = node.token;
          } else if (node instanceof SS.Function) {
            node = new SS.FunctionToken(node.name);
          }
          results.push(name = node instanceof SS.DelimToken ? node.value : node instanceof SS.OpeningParenToken ? '(' : node.constructor.name);
        }
        return results;
      }).apply(this, arguments), name1 = ref[0], name2 = ref[1];
      return !!((ref1 = this.commentNeededMap[name1]) != null ? ref1[name2] : void 0);
    };

    ComponentValueList.prototype.toString = function() {
      var i, node, result;
      result = (function() {
        var j, len, results;
        results = [];
        for (i = j = 0, len = this.length; j < len; i = ++j) {
          node = this[i];
          if (i > 0 && i < this.length && SS.ComponentValueList.commentNeeded(this[i - 1], node)) {
            results.push("/**/" + node);
          } else {
            results.push(node);
          }
        }
        return results;
      }).call(this);
      return result.join('');
    };

    return ComponentValueList;

  })();

  SS.Stylesheet = (function() {
    function Stylesheet(value) {
      this.value = value;
    }

    Stylesheet.prototype.toString = function() {
      return this.value.join("\n");
    };

    return Stylesheet;

  })();

}).call(this);
